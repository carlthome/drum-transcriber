function [hNew,hGen]=testMakeErgodicHMMGMM%test HMM design,%using GaussMixD output distributions%Arne Leijon 2009-07-23 testedc='rbgk';%state color coding, max 4 states%ergodic generator HMM:% nStates=2;% A=[.95 .05; .05 .95];% p0=[0.5;0.5];nStates=3;A=[.98 .01 .01; .01 .98 .01;.01 0.01 0.98];p0=[1;1;1];mc=MarkovChain(p0,A);%fairly difficult for ergodic HMM, because outputdistr are highly overlapping%needs a lot of training datapDgen(1)=GaussD('Mean',[0 0],'StDev',[3 1]);pDgen(2)=GaussD('Mean',[+1 0],'StDev',[1 3]);pDgen(3)=GaussD('Mean',[-1 0],'StDev',[1 3]);hGen=HMM('MarkovChain',mc,'OutputDistr',pDgen);%Make training data sequences:xTraining=zeros(2,0);%training datalxT=[];%lengths of sub-sequencessT=[];%generator statesfor i=1:2    [x,s]=rand(hGen,2000);    xTraining=[xTraining,x];    sT=[sT,s];    lxT=[lxT,size(x,2)];end;hNew=MakeErgodicHMM(nStates,50,GaussMixD(2),xTraining,lxT);plotTraining(xTraining,sT,c);plotCross(hNew.OutputDistr,[1 2],c);function plotTraining(xT,sT,c)nStates=max(sT);for s=1:nStates    plot(xT(1,sT==s),xT(2,sT==s),['o',c(s)],'MarkerSize',1.5);    hold on;end;