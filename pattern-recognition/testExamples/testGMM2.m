function [hNew,hGen]=testGMM%test training a single GaussMixD object%Arne Leijon 2009-07-21 testedc='rbgk';%state color coding, max 4 states%make a fairly tricky Gaussmix distribution%Here the VQ initialization finds the wrong clusters!pDgen(1)=GaussD('Mean',[-4 0],'StDev',[1 3]);pDgen(2)=GaussD('Mean',[+4 0],'StDev',[1 3]);pDgen(3)=GaussD('Mean',[0 -4],'StDev',[3 1]);pDgen(4)=GaussD('Mean',[0 +4],'StDev',[3 1]);%make a well separated Gaussmix distribution% pDgen(1)=GaussD('Mean',[-7 0],'StDev',[1 3]);% pDgen(2)=GaussD('Mean',[+7 0],'StDev',[1 3]);% pDgen(3)=GaussD('Mean',[0 -7],'StDev',[3 1]);% pDgen(4)=GaussD('Mean',[0 +7],'StDev',[3 1]);hGen=GaussMixD(pDgen,[1 1 1 1]);%Make a big training data sequence:[xTraining,sT]=rand(hGen,10000);%training data%hNew=GaussMixD([GaussD([-0.3 0],[1 1]),GaussD([0.3 0],[1 1]),GaussD([0 -0.3],[1 1]),GaussD([0 0.3],[1 1])]);% g=repmat(GaussD,4,1);% g=init(g,xTraining);% hNew=GaussMixD(g);hNew=init(GaussMixD(4),xTraining);for nTraining=1:40    figure;    plotTraining(xTraining,sT,c);    plotCross(hNew.Gaussians,[1 2],c); 	axis([-10 10 -10 10]);	hold off;    %one training step:    aS=adaptStart(hNew);        aS=adaptAccum(hNew,aS,xTraining);    hNew=adaptSet(hNew,aS);end;function plotTraining(xT,sT,c)nStates=max(sT);for s=1:nStates    plot(xT(1,sT==s),xT(2,sT==s),['o',c(s)],'MarkerSize',1.5);    hold on;end;