function [hNew,hGen]=testGaussPC;%test of GMM design%Arne Leijon 2008-02-21 testedc='rbgk';%state color coding, max 4 states%make a fairly tricky Gaussmix distribution%Here the VQ initialization sometimes finds wrong clusters!pDgen(1)=GaussD('Mean',[-3 -1],'StDev',[1 3]);% pDgen(2)=GaussD('Mean',[+3 1],'StDev',[1 3]);% pDgen(3)=GaussD('Mean',[-1 -3],'StDev',[3 1]);% pDgen(4)=GaussD('Mean',[1 +3],'StDev',[3 1]);% hGen=GaussMixD(pDgen,[1]);%hGen=GaussMixD(pDgen,[1 1 1 1]);%Make a big training data sequence:[xTraining,sT]=rand(hGen,3000);%training datahNew=init(repmat(GaussPC,1,1),xTraining);%hNew=init(repmat(GaussMixD(1),2,1),xTraining);%2 GMM(1)for nTraining=1:10    figure;    plotTraining(xTraining,sT,c);    hold on;    %also plot error points, as classified by viterbi...    for i=1:length(hNew);        plotCross(hNew(i),[1 2],c(i));        hold on;    end; 	axis([-10 10 -10 10]);	hold off;%	pause;    %one training step:    aS=adaptStart(hNew);        aS=adaptAccum(hNew,aS,xTraining);    hNew=adaptSet(hNew,aS);end;function plotTraining(xT,sT,c)nStates=max(sT);for s=1:nStates    plot(xT(1,sT==s),xT(2,sT==s),['o',c(s)],'MarkerSize',1.5);    hold on;end;