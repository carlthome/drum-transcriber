function [hNew,hGen]=testLeftRightHMMGMM2%test of HMM training with GMM output distributions%Arne Leijon 2009-07-23 testedc='rbgk';%state color coding%generator HMM:% A=[.95 .05 0;0 .95 .05];% p0=[1;0];nStates=3;A=[.99 .01 0 0;0 .99 .01 0;0 0 0.99 0.01];p0=[1;0;0];mc=MarkovChain(p0,A);pDgen(1)=GaussD('Mean',[0 0],'StDev',[3 1]);pDgen(2)=GaussD('Mean',[+1 0],'StDev',[1 3]);pDgen(3)=GaussD('Mean',[-1 0],'StDev',[1 3]);hGen=HMM(mc,pDgen);%Make many training data sequences:xTraining=zeros(2,0);%training datalxT=[];%lengths of sub-sequencessT=[];%generator statesfor i=1:20    [x,s]=rand(hGen,1000);    xTraining=[xTraining,x];    sT=[sT,s(s<=nStates)];    lxT=[lxT,size(x,2)];end;hNew=InitLeftRightHMM(nStates,GaussMixD(2),xTraining,lxT);figure;plotTraining(xTraining,sT,c);plotCross(hNew.OutputDistr,[1 2],c);%before training[hNew,lP]=train(hNew,xTraining,lxT,10,log(1.001));figure;plotTraining(xTraining,sT,c);plotCross(hNew.OutputDistr,[1 2],c);%after trainingfigure;plot(lP);function plotTraining(xT,sT,c)nStates=max(sT);for s=1:nStates    plot(xT(1,sT==s),xT(2,sT==s),['o',c(s)],'MarkerSize',1.5);    hold on;end;