function [hNew,hGen]=testLeftRightHMM;%test of HMM design%Arne Leijon 2009-07-21 testedc='rbgk';%state color coding, max 4 states%generator HMM:% A=[.95 .05 0;0 .95 .05];% p0=[1;0];nStates=3;A=[.95 .05 0 0;0 .95 .05 0;0 0 0.95 0.05];p0=[1;0;0];mc=MarkovChain(p0,A);pDgen(1)=GaussD('Mean',[0 0],'StDev',[3 1]);pDgen(2)=GaussD('Mean',[+1 0],'StDev',[1 3]);pDgen(3)=GaussD('Mean',[-1 0],'StDev',[1 3]);hGen=HMM(mc,pDgen);%Make many training data sequences:xTraining=zeros(2,0);%training datalxT=[];%lengths of sub-sequencessT=[];%generator statesfor i=1:20    [x,s]=rand(hGen,1000);    xTraining=[xTraining,x];    s=s(s<=nStates);    sT=[sT,s];    lxT=[lxT,size(x,2)];end;hNew=InitLeftRightHMM(nStates,GaussD,xTraining,lxT);for nTraining=1:10    figure;    plotTraining(xTraining,sT,c);    %also plot error points, as classified by viterbi...    plotCross(hNew.OutputDistr,[1 2],c); 	axis([-10 10 -10 10]);	hold off;%	pause;    %one training step:    ixT=cumsum([1,lxT]);%start index for each sub-sequence    aS=adaptStart(hNew);    for r=1:length(lxT)        aS=adaptAccum(hNew,aS,xTraining(:,ixT(r):(ixT(r+1)-1)));    end;    hNew=adaptSet(hNew,aS);end;function plotTraining(xT,sT,c)nStates=max(sT);for s=1:nStates    plot(xT(1,sT==s),xT(2,sT==s),['o',c(s)],'MarkerSize',1.5);    hold on;end;