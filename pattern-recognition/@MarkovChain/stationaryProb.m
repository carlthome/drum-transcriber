%function pState=stationaryProb(mc);%method to calculate stationary state probability%for a stationary infinite-duration MarkovChain.%%Input:%mc=        single MarkovChain object%%Result:%pState=    column vector with stationary state probability mass%%Arne Leijon 2004-11-24 tested%           2006-08-08 allow sparse TransitionProb matrix%           2010-08-25 bug fix%           2011-05-26 minor cleanupfunction pState=stationaryProb(mc)epsilon=10.^-8;%allowed numerical error in eigenvalueif finiteDuration(mc)    error('Finite Duration: can not have Stationary state probabilities');end;%*******Can it have infinite duration, AND be NOT stationary?????%YES, if it is PERIODIC, i.e., non-ergodic%Solve the correct eigenvector problem:nStates=mc.nStates;%fix 2010-08-25A=mc.TransitionProb(:,1:nStates);%just in case is was not squareif issparse(A)    opt.disp=0;%minimal comment display    opt.v0=ones(nStates,1)./nStates;%good start vector    [v,d]=eigs(A',1,'lm',opt);%1 largest eigenvalueelse    [v,d]=eig(A');end;d=abs(diag(d)-1);%eigenvalue deviation from 1iOK=(d<epsilon);%eigenvalues very close to 1if sum(iOK)<1%can this happen?    error('No stationary probability distribution');end;if sum(iOK)>1%can certainly happen!    warning('MarkovChain:stationaryProb:NotErgodic',...        'Not ergodic: Multiple stationary distributions');end;[~,i]=min(d);%choose eigenvalue nearest 1pState=v(:,i);%corresponding eigenvectorpState=pState./sum(pState);%normalizeif ~isreal(pState)|| any(pState<0) || any(pState>1)%this should never happen!    error('Impossible eigenvector');end;end