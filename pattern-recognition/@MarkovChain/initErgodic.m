%function mc=initErgodic(mc,nStates,stateDuration);%Initialize a single MarkovChain object%to an infinite-duration stationary ergodic structure%allowing transitions from every state to all other states.%%Input:%mc=        the MarkovChain object%nStates=   desired number of Markov states%stateDuration= (optional) average number of consecutive samples in each state%               length(stateDuration)==nStates OR ==1        %%Result:%mc=       the initialized MarkovChain object%%Arne Leijon 2011-08-02 testedfunction mc=initErgodic(mc,nStates,stateDuration)defaultDuration=10;%if stateDuration not givenif nStates<=1	error('Number of states must be >1');end;if nargin<3||isempty(stateDuration)    stateDuration=defaultDuration;end;if length(stateDuration)==1    stateDuration=repmat(stateDuration,nStates,1);elseif length(stateDuration)~= nStates    error('Incompatible length of state durations');end;minDiagProb=0.1;%initial min diagonal TransitionProb value%D=max(1,stateDuration(:));%must be column vectoraii=max(minDiagProb,(D-1)./D);%diagonal values of TransitionProb matrixaij=(1-aii)./(nStates-1);%off-diagonal values, all equal%A=(aii-aij)*diag(ones(nStates,1))+aij*ones(nStates,nStates);A=diag(aii-aij)+repmat(aij,1,nStates);p0=ones(nStates,1)./nStates;mc.InitialProb=p0;mc.TransitionProb=A;